buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.node-gradle:gradle-node-plugin:3.4.0"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.7.10'
    id 'application'
    id "com.github.node-gradle.node" version "3.4.0"
}

group = 'codergoblin.desertrose'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.sksamuel.hoplite:hoplite-core:2.6.3'
    implementation 'io.javalin:javalin:4.6.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'org.apache.commons:commons-csv:1.9.0'
    implementation 'org.slf4j:slf4j-simple:1.7.31'
}

compileKotlin {
    kotlinOptions.jvmTarget = '11'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '11'
}

application {
    mainClassName = 'codergoblin.desertrose.MainKt'
}

node {
    download = false
    npmInstallCommand = "install"
    nodeProjectDir = file("${project.projectDir}/src/main/javascript")
}


task fatJar("fatJar", type = Jar::class) {
    baseName = "${project.name}-fat"
    manifest {
        attributes["Implementation-Title"] = "Desert rose simple profolio page"
        attributes["Implementation-Version"] = version
        attributes["Main-Class"] = "codergoblin.desertrose.MainKt"
    }
    from(configurations.runtimeClasspath.get().map({ if (it.isDirectory) it else zipTree(it) }))
    with(tasks.jar.get() as CopySpec)
}

task buildClient(type: NpmTask) {
    args = ['run', 'build']
}

task copyClient(type: Copy, dependsOn: buildClient) {
    into("${project.projectDir}/src/main/resources/static")
    from("${project.projectDir}/src/main/javascript/dist/")
    from("${project.projectDir}/src/main/javascript/public/")
}

task cleanJs(type: Delete) {
    delete files("${project.projectDir}/src/main/javascript/build")
    delete files("${project.projectDir}/src/main/javascript/dist")
    delete files("${project.projectDir}/src/main/resources/static/*")
}

clean.finalizedBy cleanJs
buildClient.dependsOn npmInstall
build.dependsOn copyClient